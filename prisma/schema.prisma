datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// opções de status
enum StatusPet {
  DISPONIVEL
  ADOTADO
}

// Opcões de tamanho
enum Tamanho {
  PEQUENO
  MEDIO
  GRANDE
}

// opções de especie
enum Especie {
  CACHORRO
  GATO
  MACACO
  LAGARTO
  PASSARO
  COELHO
  HAMSTER
  PEIXE
  CAVALO
  PORCO
  IGUANA
  SERPENTE
  TARTARUGA
  OVELHA
  GALINHA
  PATO
}


model Pet {
  id              String    @id @default(uuid())
  nome            String
  especie         Especie
  data_nascimento DateTime
  descricao       String?
  tamanho         Tamanho  // O tamanho será calculado automaticamente pelo sistema
  status          StatusPet  @default(DISPONIVEL)
  peso            Float?
  personalidade   String?
  adocoes         Adocao[]  // Relacionamento com Adocao
  Foto_Pet        Foto_Pet[] // Relacionamento com Foto_Pet
}




model Adotante {
  id             String     @id @default(uuid())
  nome           String
  sobrenome      String
  email          String     @unique
  password       String     // Campo de senha para login
  telefone       String
  enderecos      Endereco[] // Relacionamento com Endereco
  adocoes        Adocao[]   // Relacionamento com Adocao
  data_registro  DateTime   @default(now()) // Data de registro do adotante
  numero_adocoes Int        @default(0) // Valor padrão inicial como 0. O limite sera 3 adoções por ano.
}


model Endereco {
  id                 String   @id @default(uuid())
  adotanteId         String
  rua                String
  bairro             String
  cidade             String
  numero_residencia  String
  adotante           Adotante @relation(fields: [adotanteId], references: [id], onDelete: Cascade)
}

enum StatusAdocao {
  PENDENTE
  APROVADA
  REJEITADA
}


model Adocao {
  id          String         @id @default(uuid())
  petId       String
  adotanteId  String
  data_adocao DateTime       @default(now()) // Registro automático da data de adoção
  status      StatusAdocao   @default(PENDENTE) // Status padrão da adoção
  pet         Pet            @relation(fields: [petId], references: [id], onDelete: Cascade)       // Relacionamento com Pet
  adotante    Adotante       @relation(fields: [adotanteId], references: [id], onDelete: Cascade)  // Relacionamento com Adotante
}


model Foto_Pet {
  id      String   @id @default(uuid())
  petId   String
  url     String   // URL da foto
  pet     Pet      @relation(fields: [petId], references: [id] , onDelete: Cascade) // Relacionamento com Pet
}
